//
//  CollageViewController.m
//  Microlending
//
//  Created by guest user on 10/30/11.
//  Copyright (c) 2011 __MyCompanyName__. All rights reserved.
//

#import "CollageViewController.h"

@implementation CollageViewController

@synthesize wrapper_view;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

- (void)viewDidLoad
{
    int height_of_picture = 200;
    int width_of_picture = 164;
    int columns_of_pictures = 3;
    int pic_position_x = 0;
    int pic_position_y = 0;
    int column_position = 0;
    
    [super viewDidLoad];
    
    //load images (in the future this will be loaded from server)
    NSMutableArray* list_of_pictures = [[NSMutableArray alloc] init];
    for (int i = 0; i < 12; i++) {
        UIImage* tempImage = [UIImage imageNamed:@"CodyKo.jpg"];
        [list_of_pictures addObject:tempImage];
    }
    
    int number_of_pictures = [list_of_pictures count];
    //NSLog([NSString stringWithFormat:@"%i", i]);
    
    //wrapper and scroll window should be same size
    UIScrollView *scroll = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height)];
    wrapper_view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, width_of_picture*columns_of_pictures, ((number_of_pictures/columns_of_pictures)+1)*height_of_picture)];
    
    //for each image in list of pictures, determine position and add to wrapper view
    for (UIImage* tempImage in list_of_pictures) {
        UIImageView* tempImageView = [[UIImageView alloc] initWithFrame:CGRectMake(pic_position_x, pic_position_y, tempImage.size.width, tempImage.size.height)];
        [tempImageView setImage:tempImage];
        
        //determine random amount to rotate
        double rad_rotate = ((double)rand()) / ((double)RAND_MAX) / 10 * 4 - 0.2;
        tempImageView.transform = CGAffineTransformMakeRotation(rad_rotate);
        
        [wrapper_view addSubview:tempImageView];
        [tempImageView release];
        
        //update positions
        column_position = ( column_position + 1 ) % 3;
        if (column_position == 0) {
            pic_position_x = 0;
            pic_position_y += height_of_picture;
        }
        else {
            pic_position_x += width_of_picture;
        }
    }
    
    
    scroll.contentSize = CGSizeMake(width_of_picture*columns_of_pictures, ((number_of_pictures/columns_of_pictures)+1)*height_of_picture);
    scroll.scrollEnabled = YES;
    scroll.backgroundColor = [UIColor blackColor]; 
    scroll.maximumZoomScale = 1;
    scroll.minimumZoomScale = .37;
    scroll.delegate = self;
    [scroll setZoomScale:scroll.minimumZoomScale];
    self.view = scroll;
    
    [scroll addSubview:wrapper_view];
    [scroll release];    
    
    /*
    UIImage* testImage = [UIImage imageNamed:@"CodyKo.jpg"] ;
    testImage_view = [[UIImageView alloc] 
                                   initWithFrame:CGRectMake(self.view.frame.size.width/2, self.view.frame.size.height/2, testImage.size.width, testImage.size.height)];
    
    [testImage_view setImage:testImage];
    testImage_view.transform = CGAffineTransformMakeRotation(.2);
    [scroll addSubview:testImage_view];
    
    [testImage_view release];
    */
    
    
    /*NSMutableArray* list_of_names = [[NSMutableArray alloc] init];
    for (int i = 0; i < 10; i++) {
        NSString* myNewString = [NSString stringWithFormat:@"%i", i];
       [list_of_names addObject:myNewString];
    }
    
    int temp_position_y = 15;
    int temp_position_x = 10;
    for (NSString *a in list_of_names) {
        UILabel *temp = [[UILabel alloc] initWithFrame:CGRectMake(temp_position_x, temp_position_y, 40, 20)];
        temp.text = a;
        [self.view addSubview:temp];
        [temp release];
        temp_position_y += 22;
        temp_position_x += 2;
    }*/
    

}

- (UIView *)viewForZoomingInScrollView:(UIScrollView *)scrollView {
    return wrapper_view;
}

- (CGRect)centeredFrameForScrollView:(UIScrollView *)scroll andUIView:(UIView *)rView {
    CGSize boundsSize = scroll.bounds.size;
    CGRect frameToCenter = rView.frame;
    // center horizontally
    if (frameToCenter.size.width < boundsSize.width) {
        frameToCenter.origin.x = (boundsSize.width - frameToCenter.size.width) / 2;
    }
    else {
        frameToCenter.origin.x = 0;
    }
    // center vertically
    if (frameToCenter.size.height < boundsSize.height) {
        frameToCenter.origin.y = (boundsSize.height - frameToCenter.size.height) / 2;
    }
    else {
        frameToCenter.origin.y = 0;
    }
    return frameToCenter;
}

- (void)scrollViewDidZoom:(UIScrollView *)scrollView {
    wrapper_view.frame = [self centeredFrameForScrollView:scrollView andUIView:wrapper_view];;
}

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
